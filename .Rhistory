lwd = 2, # thickness of line
col = "blue")
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 1.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty = c(1,1), col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty = c(1,1), col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
legend("topright", lty=1:2, cex=0.8, col = c("chocolate3", "blue"), bty = "n",
legend = c("Histogram of Normal", "Estimate of Limiting Distribution of Maximum Order Statistic" ))
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rpareto(n, 1, shape = 1)
o <- rnorm(k, mean = 0, sd = 1) # init vector
ka <- 1
th <- 1
X <- rpareto(n, ka, th)
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
ka <- 1
th <- 1
X <- rpareto(n, ka, th)
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
dn <- ka*(n)^(1/ka) /th
cn <- ka*(n^(1/th)-1)
o[i] <-(max(X[p:q]) - dn )/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
hist(X, # histogram
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
ka <- 1
th <- 2
X <- rpareto(n, ka, th)
o <- rnorm(k, mean = 0, sd = 1) # init vector
hist(X, # histogram
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
setwd("~/R/THESIS")
hist(SPDaily, # histogram
breaks = 50,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "log returns",
main = "S&P 500 Daily Log Returns")
lines(density(dat1), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
require(quantmod)
require(fpp2)
require(PerformanceAnalytics)
require(fBasics)
require(xts)
require(taRifx)#used to remove "N/A N/A" strings
data <- read.csv("data.csv",header=T, sep=",") #Data has headers and seperated by ","
attach(data)
DATE <- as.Date(as.character(data$DATE), "%Y-%m-%d")
SP <- xts(SPX.Index, DATE)
#####S&P######
logSPDaily <- xts(log(SP), OHLC=FALSE)
#Create Daily TS
SPDaily <-  diff(logSPDaily, lag = 1)
#Create Weekly TS
SPWeekly <- diff(to.weekly(logSPDaily,OHLC=FALSE), lag =1)
#Create Monthly TS
SPMonthly <- diff(to.monthly(logSPDaily,OHLC=FALSE), lag =1)
#Create Daily TS
SPDaily <- diff(logSPDaily , lag = 1)
qqnorm(coredata(SPDaily), main = "S&P Log Daily Close QQ-plot")
qqline(coredata(SPDaily), col = "red")
#Create Weekly TS
SPWeekly <- diff(logSPDaily, lag = 5)
qqnorm(coredata(SPWeekly), main = "S&P Log Weekly Close QQ-plot")
qqline(coredata(SPWeekly), col = "red")
#Create Monthly TS
SPMonthly <- diff(logSPDaily, lag = 25)
qqnorm(coredata(SPMonthly), main = "S&P Log Monthly Close QQ-plot")
qqline(coredata(SPMonthly), col = "red")
set.seed(1234)
m1 = mean(coredata(SPDaily[-1]))
s1 = sd(coredata(SPDaily[-1]))
m2 = mean(coredata(SPWeekly[-(1:5)]))
s2 = sd(coredata(SPWeekly[-(1:5)]))
m3 = mean(coredata(SPMonthly[-(1:25)]))
s3 = sd(coredata(SPMonthly[-(1:25)]))
dat1<- rnorm(10000000, mean = (m1 - s1*s1/2), sd = s1)
dat2<- rnorm(10000000, mean = (m2 - s2*s2/2), sd = s2)
dat3<- rnorm(10000000, mean = (m3 - s3*s3/2), sd = s3)
#Create 100 day TS
SP100 <- diff(logSPDaily , lag = 100)
dat4<- rnorm(10000000, mean = (m1 - s1*s1/2)*100, sd = s1*sqrt(100))
hist(SP100, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "log returns",
main = "S&P 500 Daily Log Returns")
lines(density(dat4), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
layout(matrix(c(1:6), 3, 2,
byrow = FALSE))
hist(SPDaily, # histogram
breaks = 50,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "log returns",
main = "S&P 500 Daily Log Returns")
lines(density(dat1), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
# Clear plots
if(!is.null(dev.list())) dev.off()
hist(SPDaily, # histogram
breaks = 50,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "Returns",
main = "S&P 500 Daily Log Returns")
lines(density(dat1), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
SPDaily <- diff(logSPDaily , lag = 1)
qqnorm(coredata(SPDaily), main = "S&P Log Daily Close QQ-plot")
qqline(coredata(SPDaily), col = "red")
SPDaily <- diff(logSPDaily , lag = 1)
qqnorm(coredata(SPDaily), main = "S&P 500 Daily Log Returns QQ-plot")
qqline(coredata(SPDaily), col = "red")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clear console
cat("\014")
# Clean workspace
rm(list=ls())
library(qrmtools)
library(EnvStats)
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rnorm(n, mean = 0, sd = 1) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- (2*log(k))^(-1/2)
dn <- (2*log(k))^(1/2) - ((log(4*pi) + log(log(n)))/(2*(2*log(k))^(1/2)))
o[i] <-(max(X[p:q])-dn)/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(-5, 5),
ylim = c(0, 0.5),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "blue")
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
X <- rPar(n, shape = 10) # generate data
o <- rnorm(k, mean = 0, sd = 1) # init vector
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
cn <- n^(1/10)
o[i] <-(max(X[p:q]))/cn
}
hist(X, # histogram
breaks = 100,
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
lines(density(na.omit(o)), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
k <- 10000 #number of trials
n <- 1000*k  # sample size = number of iid random variables
ka <- 1
th <- 2
X <- rpareto(n, ka, th)
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
dn <- ka*(n)^(1/ka) /th
cn <- ka*(n^(1/th)-1)
o[i] <-(max(X[p:q]) - dn )/cn
}
X <- rpareto(n, ka, th)
for (i in 1:k){
p <- (i-1)*k +1
q <- i*k
dn <- ka*(n)^(1/ka) /th
cn <- ka*(n^(1/th)-1)
o[i] <-(max(X[p:q]) - dn )/cn
}
hist(X, # histogram
col="peachpuff", # column color
border="black",
freq = FALSE, # show densities instead of frequencies
xlab = "X",
xlim = c(0,1),
main = "Density")
